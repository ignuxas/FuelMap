{"version":3,"sources":["components/FuelTypeCircles.jsx","components/Handlers.jsx","components/LocationPopup.jsx","components/SideCircles.jsx","components/StationsTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["FuelTypeCircles","props","fuelPrices","fuelTypes","averagePrices","avgPrices","map","fuelPrice","index","className","circleClasses","height","width","cx","cy","r","circleText","contenteditable","editableField","stationID","contentEditable","handleEdit","location","changedPricesDivs","type","lID","ID","currentPrices","A95","A98","D","LPG","document","querySelectorAll","changedPrices","console","log","forEach","priceDiv","price","parseFloat","innerHTML","split","fuelType","parentElement","classList","replace","changed","Object","entries","key","value","fetch","api","method","headers","body","JSON","stringify","then","data","status","alert","LocationPopup","name","address","id","onClick","updated","minPriceStations","minPrices","averagePrice","toFixed","setPos","latitude","longitude","StationsTable","useState","setEditableField","FuelStationData","quantity","style","display","class","setDisplayedTableStations","App","Map","menuOpen","SetFuelStationData","DisplayedTableStations","ErrorCode","setErrorCode","getMinStation","array","average","minNum","stationNum","i","length","trueLength","useEffect","Axios","get","response","getElementById","catch","error","MapController","position","useMap","zoom","getZoom","flyTo","A95Prices","A98Prices","DPrices","LPGPrices","push","avgA95Price","avgA98Price","avgDPrice","avgLPGPrice","minA95PriceStation","minA98PriceStation","minDPriceStation","minLPGPriceStation","href","target","rel","menu","querySelector","left","openMenu","MapContainer","whenCreated","center","zoomControl","preferCanvas","TileLayer","attribution","url","subdomains","maxZoom","CircleMarker","radius","pathOptions","color","fillOpacity","fillColor","bubblingMouseEvents","weight","Popup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.85cc7316.chunk.js","sourcesContent":["import { circleClasses, circleText } from \"../App\";\r\n\r\nexport default function FuelTypeCircles(props) {\r\n    const fuelPrices = props.fuelTypes;\r\n    const averagePrices = props.avgPrices;\r\n\r\n    return (\r\n        fuelPrices.map((fuelPrice, index) => {\r\n            return (\r\n                fuelPrice > 0 && fuelPrice !== null ? (\r\n                <div className={`circle ${circleClasses[index]}`}>\r\n                    <svg height=\"30\" width=\"30\">\r\n                        <circle cx=\"15\" cy=\"15\" r=\"15\" />\r\n                    </svg>\r\n                    <h4 className=\"iconText\">{circleText[index]}</h4>\r\n                    <div contenteditable={props.editableField === props.stationID ? \"true\":\"false\"} \r\n                         className={`price ${averagePrices[index] > fuelPrice ? (\"priceGreen\") : (\"priceRed\")}`}>\r\n                            <span contentEditable=\"false\">â‚¬</span>&nbsp;{fuelPrice /* todo: fix warnings */}\r\n                        </div>\r\n                </div>\r\n                ) : (<></>)\r\n            )\r\n        })\r\n    )\r\n}","import { api } from \"../App\";\r\n\r\nexport function handleEdit(location, type=\"popup\", SetFuelStationData){\r\n    const lID = location.ID;\r\n    // todo: make this not hard-coded\r\n    const currentPrices = {\r\n        A95: location.A95,\r\n        A98: location.A98,\r\n        D: location.D,\r\n        LPG: location.LPG\r\n    };\r\n\r\n    var changedPricesDivs;\r\n\r\n    if(type === \"popup\"){\r\n        changedPricesDivs = document.querySelectorAll(`#s${lID} .price`);\r\n    } else {\r\n        changedPricesDivs = document.querySelectorAll(`#t${lID} .price`);\r\n    }\r\n\r\n    // todo: make this not hard-coded\r\n    var changedPrices = {\r\n        A95: 0,\r\n        A98: 0,\r\n        D: 0,\r\n        LPG: 0\r\n    };\r\n\r\n    console.log(changedPricesDivs);\r\n\r\n    changedPricesDivs.forEach((priceDiv) => {\r\n        // todo: code below depends on a class, should be changed\r\n        const price = parseFloat(priceDiv.innerHTML.split(\"&nbsp;\")[1]);\r\n        const fuelType = priceDiv.parentElement.classList[1].replace(\"circle\", \"\");\r\n\r\n        changedPrices[fuelType] = price;\r\n    });\r\n\r\n    // check if any prices were changed\r\n    var changed = false;\r\n    for (const [key, value] of Object.entries(changedPrices)) {\r\n        if(value !== currentPrices[key]){\r\n            changed = true;\r\n            console.log(key, value, \"|\", currentPrices[value]);\r\n        }\r\n    }\r\n\r\n    if(changed){\r\n        fetch(api+\"/editfuelstation\" , {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    ID: lID,\r\n                    A95: changedPrices.A95,\r\n                    A98: changedPrices.A98,\r\n                    D: changedPrices.D,\r\n                    LPG: changedPrices.LPG\r\n                })\r\n            })\r\n            .then((data) => {\r\n                if(data.status === 200){\r\n                    alert(\"Kainos pakeistos\");\r\n                } else {\r\n                    alert(\"KainÅ³ pakeisti nepavyko\");\r\n                }\r\n            }\r\n        );\r\n    } else {\r\n        alert(\"Kainos nepakeistos\");\r\n    }\r\n}","import FuelTypeCircles from \"./FuelTypeCircles\";\r\n\r\nimport { handleEdit } from \"./Handlers\";\r\n\r\nexport default function LocationPopup(props) {\r\n    const location = props.location;\r\n    const averagePrices = props.averagePrices;\r\n\r\n    return (\r\n    <>\r\n        <div className=\"StationInfo\">\r\n            <h2 className=\"StationName\">{location.name}</h2>\r\n            <h4 className=\"address\">{location.address}</h4>\r\n        </div>\r\n\r\n        <div className=\"prices\" id={`s${location.ID}`}>\r\n            <FuelTypeCircles \r\n            fuelTypes={[location.A95, location.A98, location.D, location.LPG]}\r\n            avgPrices={averagePrices}>\r\n            </FuelTypeCircles>\r\n        </div>\r\n\r\n        <a className=\"ChangeLink\" onClick={() => handleEdit(location)}>\r\n            Keisti KainÄ…\r\n        </a>\r\n        <h4 className=\"updated\">{location.updated}</h4>\r\n    </>\r\n    )\r\n}","import { circleClasses, circleText } from \"../App\";\r\n\r\nexport default function FuelTypeCircles(props) {\r\n    const averagePrices = props.averagePrices;\r\n    const minPriceStations = props.minPriceStations;\r\n    const minPrices = props.minPrices;\r\n    \r\n    return (\r\n        averagePrices.map((averagePrice, index) => (\r\n            <div className={`circleDisplay ${circleClasses[index]}`}>\r\n                <svg height=\"60\" width=\"60\"><circle cx=\"30\" cy=\"30\" r=\"30\"/>\r\n                </svg>\r\n                <h4 className=\"iconTextDisplay\">{circleText[index]}</h4>\r\n                <div className=\"fuelPricesDiv\">\r\n                    <h4 >VID: {averagePrice.toFixed(2)}â‚¬</h4>\r\n                    <h4 className=\"minPrice\" \r\n                        onClick={() => props.setPos([minPriceStations[index].latitude, minPriceStations[index].longitude])}> \r\n                        MIN: {minPrices[index].toFixed(2)}â‚¬</h4>\r\n                </div>\r\n            </div>\r\n        ))\r\n    )\r\n}","import FuelTypeCircles from \"./FuelTypeCircles\";\r\nimport { useState } from \"react\";\r\nimport { handleEdit } from \"./Handlers\";\r\n\r\nexport default function StationsTable(props) {\r\n    const [editableField, setEditableField] = useState(-1);\r\n    const FuelStationData = props.FuelStationData;\r\n    const averagePrices = props.averagePrices;\r\n    const quantity = props.quantity;\r\n\r\n    return (\r\n        <>\r\n        {FuelStationData.map((location, index) => (\r\n            location.A95 || location.A98 || location.D || location.LPG ? (\r\n            <div className={`stationRow ${editableField === location.ID ? \"editable\":\"\"}`} key={location.ID} \r\n                style={index > quantity ? {display:\"none\"}:{display:\"block\"}}\r\n            >\r\n                <div className=\"stationHeaders\" onClick={() => props.setPos([location.latitude, location.longitude])}>\r\n                    <div className=\"stationName\">{location.name}</div>\r\n                    <div className=\"stationAddress\">{location.address}</div>\r\n                </div>\r\n                <div className=\"stationPrices\" id={`t${location.ID}`}>\r\n                    <FuelTypeCircles\r\n                        fuelTypes={[location.A95, location.A98, location.D, location.LPG]}\r\n                        avgPrices={averagePrices}\r\n                        stationID={location.ID}\r\n                        editableField={editableField}\r\n                    ></FuelTypeCircles>\r\n                </div>\r\n                <div className=\"stationUpdated\">{location.updated}</div>\r\n                <div className=\"stationEdit\" onClick={ // cancel editing if already editing\r\n                    editableField === location.ID ? \r\n                        () => {setEditableField(-1); handleEdit(location, \"table\")} : // if already editing\r\n                        () => setEditableField(location.ID)}\r\n                    >\r\n                    <i class=\"fa-solid fa-pen-to-square\"></i>\r\n                </div>\r\n            </div>\r\n        ) : (<></>)))}\r\n        <a className=\"aeffect\" onClick={\r\n            () => props.setDisplayedTableStations(quantity + 12)\r\n            }>LOAD MORE</a>\r\n        </>\r\n    )\r\n}","import \"./App.css\";\nimport \"./styles/StationsTables.css\";\nimport { useState } from \"react\";\nimport React, { useEffect } from \"react\";\nimport { MapContainer, TileLayer, Popup, CircleMarker, useMap} from \"react-leaflet\";\nimport Axios from \"axios\";\n\nimport LocationPopup from \"./components/LocationPopup\";\nimport SideCirles from \"./components/SideCircles\";\nimport StationsTable from \"./components/StationsTable\";\n\nexport const circleClasses=['circleA95', 'circleA98', 'circleD', 'circleLPG']\nexport const circleText=['95', '98', 'D', 'LPG']\n\nexport const api = \"https://fuelapi.ignuxas.com\"\n\nfunction App() {\n  var Map;\n  var menuOpen = false;\n\n  const [FuelStationData, SetFuelStationData] = useState([]);\n  const [DisplayedTableStations, setDisplayedTableStations] = useState(12);\n  const [ErrorCode, setErrorCode] = useState(200);\n\n  const getlocations = () => {\n    Axios.get(api+\"/fuelstations\").then((response) => {\n      if(response.status === 200){\n        SetFuelStationData(response.data);\n        console.log(\"Got Data\");\n        document.getElementById(\"Loading\").style.display = \"none\";\n      } else {\n        setErrorCode(response.status);\n        document.getElementById(\"Loading\").style.display = \"none\";\n      }\n    }).catch((error) => {\n      setErrorCode(500);\n      document.getElementById(\"Loading\").style.display = \"none\";\n    });\n  };\n\n  useEffect(() => {\n    getlocations();\n  }, []);\n\n  function getMinStation(array, average) {\n    var minNum = 99;\n    var stationNum = 0;\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i] !== null && array[i] > average - 0.3) { // filter out troll and null data\n        if (array[i] < minNum) {\n          minNum = array[i];\n          stationNum = i;\n        }\n      }\n    }\n    console.log(\"Min Price: \" + minNum);\n\n    return FuelStationData[stationNum];\n  }\n\n  function averagePrice(array){\n    var trueLength = 0;\n    var value = 0\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i] !== null && array[i] > 0.4 && array[i] < 3) { // filter out troll and null data\n        trueLength += 1\n        value += array[i]\n      }\n    }\n    return (value / trueLength)\n  }\n\n  const MapController = (position) => {\n    const map = useMap();\n    Map = map;\n    return <></>;\n  };\n\n  function setPos(position, zoom=Map.getZoom(), offset=[30000,0]) {\n    Map.flyTo(position, zoom);\n  }\n\n  if (FuelStationData.length !== 0) {\n    //there is a better way to do this, will re-write sometime\n\n    const A95Prices = [];\n    const A98Prices = [];\n    const DPrices = [];\n    const LPGPrices = [];\n\n    for (let i = 0; i < FuelStationData.length; i++) {\n      A95Prices.push(FuelStationData[i].A95);\n      A98Prices.push(FuelStationData[i].A98);\n      DPrices.push(FuelStationData[i].D);\n      LPGPrices.push(FuelStationData[i].LPG);\n    }\n    //average prices\n    var avgA95Price = averagePrice(A95Prices);\n    var avgA98Price = averagePrice(A98Prices);\n    var avgDPrice = averagePrice(DPrices);\n    var avgLPGPrice = averagePrice(LPGPrices);\n\n    var averagePrices = [avgA95Price, avgA98Price, avgDPrice, avgLPGPrice];\n\n    //min prices\n    var minA95PriceStation = getMinStation(A95Prices, avgA95Price);\n    var minA98PriceStation = getMinStation(A98Prices, avgA98Price);\n    var minDPriceStation = getMinStation(DPrices, avgDPrice);\n    var minLPGPriceStation = getMinStation(LPGPrices, avgLPGPrice);\n\n    var minPriceStations = [minA95PriceStation, minA98PriceStation, minDPriceStation, minLPGPriceStation];\n  }\n\n  function openMenu(){\n    var menu = document.querySelector(\"#Menu\");\n    if(menuOpen === false){ // OPEN menu\n      menu.style.left = \"0px\";\n      menuOpen = true;\n    }\n    else{\n      menu.style.left = \"-320px\";\n      menuOpen = false;\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"lds-dual-ring\" id=\"Loading\" />\n      <div id=\"ErrorDiv\" style={ErrorCode !== 200 ? {display:\"block\"}:{display:\"none\"}}>\n        <h2>Error {ErrorCode}</h2>\n        The server is currently down, please try again later or contact me at <a className=\"aeffect\" href=\"mailto:mikolaitis.ignas@gmail.com\">mikolaitis.ignas@gmail.com</a>\n      </div>\n      {FuelStationData[0] ? (\n      <div id=\"Menu\">\n        <div id=\"StationPanel\">\n            <p id=\"Title\">KURAS</p>\n            <div id=\"StationTable\">\n              <StationsTable \n                FuelStationData={FuelStationData}\n                averagePrices={averagePrices}\n                quantity={DisplayedTableStations}\n                setDisplayedTableStations={setDisplayedTableStations}\n                setPos={setPos}\n              ></StationsTable>\n            </div>\n            <footer>\n                <p>Fuel Map made by: <a className=\"aeffect\" href=\"https://ignuxas.com\" target=\"_blank\" rel=\"noreferrer\">Ignas Mikolaitis</a></p>\n                <p className=\"betaText\">OPEN BETA: This project is still in development and anything can change, there may be some bugs and unfinished features.</p>\n                <p className=\"redText\">Note: The prices are crowd sourced and may be inaccurate or outdated.</p>\n            </footer>\n        </div>\n        <div id=\"PricePanel\">\n            <i className=\"fas fa-bars\" onClick={() => openMenu()} />\n            <div className=\"avgFuelPrices\">\n                <SideCirles \n                  averagePrices={averagePrices} \n                  setPos={setPos} \n                  minPriceStations={minPriceStations}\n                  minPrices={[minA95PriceStation.A95, minA98PriceStation.A98, minDPriceStation.D, minLPGPriceStation.LPG]}\n                  ></SideCirles>\n            </div>\n        </div>\n    </div>\n    ) : (<></>)\n    }\n\n      <div id=\"map\">\n        <MapContainer\n          whenCreated={(map) => {\n              Map = map\n          }}\n          center={[55.14952486735533, 23.992860624307255]}\n          zoom={8}\n          zoomControl={false}\n          preferCanvas={true}\n        >\n          <MapController></MapController>\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>'\n            url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\"\n            subdomains=\"abcd\"\n            maxZoom=\"20\"\n          />\n          {FuelStationData.map((location) => (\n            // will update this when I update the database\n            location.A95 || location.A98 || location.D || location.LPG ? (\n              <CircleMarker\n                center={[location.latitude, location.longitude]}\n                radius={9}\n                pathOptions={{\n                  color: \"#00AC2B\",\n                  fillOpacity: 1,\n                  fillColor: \"#57FF71\",\n                  bubblingMouseEvents: false,\n                  weight: 2.5,\n                }}\n                class=\"Marker\"\n              >\n                <Popup>\n                  <LocationPopup \n                  location={location} \n                  averagePrices={averagePrices}></LocationPopup>\n                </Popup>\n              </CircleMarker>\n            ) : (<></>)\n          ))}\n        </MapContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}